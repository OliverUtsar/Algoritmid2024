Lineaarotsing on otsingualgoritm, mis kontrollib järjestikku iga loendis olevat elementi.
Alustab algusest ning võrdleb igat elementi sihiväärtusega.
Ruumikeerukus on igal juhul sellel algoritmil O(1) ehk täiendavat ruumi ei vaja, kuna otsing toimub massiivis endas.

lineaarotsingu algoritmi näide:
#Massiiv ja sihtväärtus on defineeritud enne funktsiooni
massiiv = [3, 5, 7, 9, 11]
sihtväärtus = 7

def lineaar_otsing(massiiv, sihtväärtus):
    #Käime läbi iga elemendi(indeksi) massiivis
    for indeks in range(len(massiiv)):
        #Kui leiame otsitava elemendi, prindime selle ja lõpetame funktsiooni
        if massiiv[indeks] == sihtväärtus:
            print(f"Element {sihtväärtus} leiti indeksilt {indeks}.")
            return
    #Kui tsükkel lõpetab ilma, et oleks elementi leidnud
    else:
        print(f"Elementi {sihtväärtus} ei leitud.")

#Käivitame lineaarotsingu funktsiooni
lineaar_otsing(massiiv, sihtväärtus)

Selle lineaarotsingu algoritmi ajakeerukus on O(n), kus n on massiivi elementide arv.
Halvimal juhul peame otsitavat elementi otsima läbi terve massiivi (näiteks kui see on viimane element või kui elementi pole olemas).
Parimal juhul, kui otsitav element on esimesel positsioonil, on keerukus O(1).
Lineaarotsing on ebaefektiivne suurte loendite korral.
Teised otsingualgoritmid on paremad selle poolest, et võimaldavad kiiremat tulemust, kui loend on juba osaliselt järjestatud.
Lineaarotsingut saab kasutada näiteks lihtsamate otsingute puhul väikestest kogumitest, näiteks sõbralistist sõbra otsimine perekonnanime järgi.
